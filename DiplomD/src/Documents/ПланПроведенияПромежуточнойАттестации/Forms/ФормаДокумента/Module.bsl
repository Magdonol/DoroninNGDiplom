
&НаСервере
Процедура ТЧДатаПриИзмененииНаСервере()
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧДатаПриИзменении(Элемент)
	Стр = Элементы.ТЧ.ТекущиеДанные; 
	Если Стр.Дата > Объект.ДатаОкончанияСессии ИЛИ Стр.Дата < Объект.ДатаНачалаСессии Тогда 
		Сообщить("Дата проведения аттестационного мероприятия не может быть больше даты окончания сессии и меньше даты начала сессии"); 
		Стр.Дата = ""; 
	КонецЕсли; 
	
	ТЧДатаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТЧПреподавательПриИзмененииНаСервере(Препод,Ведет)
	Запрос = Новый Запрос; 
	Запрос.Текст = "ВЫБРАТЬ
	               |	РабочаяПрограммаДисцилиныПреподавательскийСостав.НомерСтроки КАК НомерСтроки,
	               |	РабочаяПрограммаДисцилиныПреподавательскийСостав.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.РабочаяПрограммаДисцилины.ПреподавательскийСостав КАК РабочаяПрограммаДисцилиныПреподавательскийСостав
	               |ГДЕ
	               |	РабочаяПрограммаДисцилиныПреподавательскийСостав.Ссылка = &Ссылка
	               |	И РабочаяПрограммаДисцилиныПреподавательскийСостав.Преподаватель = &Преподаватель";
	Запрос.УстановитьПараметр("Ссылка",Объект.Дисциплина); 
	Запрос.УстановитьПараметр("Преподаватель",Препод); 
	Рез = Запрос.Выполнить().Выбрать(); 
	Рез.Следующий(); 
	Если НЕ ПустаяСтрока(Рез.Ссылка) Тогда 
		Ведет = 1; 
	Иначе 
		Ведет = 0; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧПреподавательПриИзменении(Элемент)
	Стр = Элементы.ТЧ.ТекущиеДанные; 
	Препод = Стр.Преподаватель; 
	Ведет = 0; 
	ТЧПреподавательПриИзмененииНаСервере(Препод,Ведет);
	Если Ведет = 0 Тогда 
		Сообщить("Выбранный преподаватель не ведет дисцилину" + " " + Объект.Дисциплина); 
		Стр.преподаватель = "";
	КонецЕсли; 
	
	
КонецПроцедуры

&НаСервере
Процедура ДисциплинаПриИзмененииНаСервере()
     Запросоиск = Новый Запрос; 
	 Запросоиск.Текст = "ВЫБРАТЬ
	                    |	ФормированиеУчебныхГруппПланОбучения.КоличествоЧасов КАК КоличествоЧасов
	                    |ИЗ
	                    |	Документ.ФормированиеУчебныхГрупп.ПланОбучения КАК ФормированиеУчебныхГруппПланОбучения
	                    |ГДЕ
	                    |	ФормированиеУчебныхГруппПланОбучения.Дисциплина = &Дисциплина
	                    |	И ФормированиеУчебныхГруппПланОбучения.Ссылка.НомерГруппы = &НомерГруппы";
	
	 Запросоиск.УстановитьПараметр("Дисциплина",Объект.Дисциплина); 
	 Запросоиск.УстановитьПараметр("НомерГруппы",Объект.Группа); 
	 
	 Результат = Запросоиск.Выполнить().Выбрать(); 
	 Результат.Следующий(); 
	 
	 Если ПустаяСтрока(Результат.КоличествоЧасов) Тогда 
		 Сообщить("В плане обучения группы" + " " + Объект.Группа + " " + "не предусмотрена дисцилина" + " " + объект.Дисциплина); 
		Объект.Дисциплина = "";
	Иначе 
		
	
	Запрос = Новый Запрос; 
	Запрос.Текст = "ВЫБРАТЬ
	               |	РабочаяПрограммаДисцилиныПромежуточнаяАттестация.ВидПромежуточнойАттестации КАК ВидПромежуточнойАттестации
	               |ИЗ
	               |	Справочник.РабочаяПрограммаДисцилины.ПромежуточнаяАттестация КАК РабочаяПрограммаДисцилиныПромежуточнаяАттестация
	               |ГДЕ
	               |	РабочаяПрограммаДисцилиныПромежуточнаяАттестация.Ссылка = &Ссылка
	               |	И РабочаяПрограммаДисцилиныПромежуточнаяАттестация.ПрофильНаправления = &ПрофильНаправления
	               |	И РабочаяПрограммаДисцилиныПромежуточнаяАттестация.Семестр = &Семестр";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Дисциплина); 
	Запрос.УстановитьПараметр("ПрофильНаправления",Объект.ПрофильОбучения); 
	Запрос.УстановитьПараметр("Семестр",Объект.Семестр); 
	рез = Запрос.Выполнить().Выбрать(); 
	Рез.Следующий(); 
	
	Объект.ОбъемДисциплины = рез.ВидПромежуточнойАттестации; 
	
	Спр = Справочники.ОбъемыПромежуточнойАттестации.НайтиПоНаименованию(Объект.ОбъемДисциплины); 
	КолТ = Спр.КоличествоТестов; 
	КолРр = Спр.КоличествоРейтинговыхРабот; 
	
	Пока КолТ > 0 Цикл
		О = Объект.ТЧ.Добавить(); 
		О.ВидАттестации = перечисления.ВидыромежуточнойАттестации.тест; 
		КолТ = КолТ-1; 
		
	КонецЦикла; 
	  Пока КолРр > 0 Цикл
		О = Объект.ТЧ.Добавить(); 
		О.ВидАттестации = перечисления.ВидыромежуточнойАттестации.рейтинговаяРабота; 
		КолРр = КолРр-1; 
		
	КонецЦикла;  
	
	
КонецЕсли; 

	
КонецПроцедуры

&НаКлиенте
Процедура ДисциплинаПриИзменении(Элемент)
	ДисциплинаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодСессииПриИзмененииНаСервере()
	Спр = Справочники.ПланСдачиСессии.НайтиПоНаименованию(Объект.ПериодСессии); 
	Если НЕ Объект.ФормаОбучения = Спр.ФормаОбучения Тогда 
		Сообщить("неправильно выбран период сессии"); 
		Объект.ПериодСессии = "";   
	Иначе 
		Объект.Семестр = Спр.Семестр;
		Объект.ДатаНачалаСессии = Спр.ПериодНачалаСессии; 
		Объект.ДатаОкончанияСессии = Спр.периодОкончанияСессии; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСессииПриИзменении(Элемент)
	ПериодСессииПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГруппаПриИзмененииНаСервере()
	Спр = Справочники.Группы.НайтиПоНаименованию(Объект.Группа); 
	Объект.ФормаОбучения = Спр.ФормаОбучения; 
	Объект.ПрофильОбучения = Спр.ПрофильНаправления; 
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	ГруппаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыПромежуточнойАттестацииНаСервере()
		Если ПустаяСтрока(Объект.Номер) Тогда 
		Сообщить("Перед созданием документов необходимо провести План"); 
	Иначе 
		
	Запрос = Новый Запрос; 
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПромежуточнаяАттестация.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ПромежуточнаяАттестация КАК ПромежуточнаяАттестация
	               |ГДЕ
	               |	ПромежуточнаяАттестация.Основание = &Основание";  
	Запрос.УстановитьПараметр("Основание",Объект.Ссылка);   
	рез = Запрос.Выполнить().Выгрузить(); 
	Если НЕ рез.Количество() = 0 тогда
		Сообщить("По данному плану ранее были созданы документы промежуточной аттестации"); 
	Иначе 
		Для каждого стр из Объект.ТЧ Цикл 
			Док = Документы.ПромежуточнаяАттестация.СоздатьДокумент(); 
			Док.Дата = ТекущаяДата(); 
			Док.Группа = Объект.Группа; 
			Док.ФормаОбучения = Объект.ФормаОбучения; 
			Док.ПрофильНаправления = Объект.ПрофильОбучения; 
			Док.ОбъемДисциплины = Объект.ОбъемДисциплины; 
			Док.ВидАттестации = Стр.ВидАттестации;
			Док.Основание = Объект.Ссылка; 
			Док.Преподаватель = Стр.Преподаватель; 
			Док.ДатаПроведения = Стр.Дата;  
			Док.Дисциплина = Объект.Дисциплина; 
			Док.Семестр = объект.Семестр; 
			
			ЗапросГруп = Новый Запрос; 
			ЗапросГруп.Текст = "ВЫБРАТЬ
			                   |	ФормированиеУчебныхГруппСписокСтудентов.Студент КАК Студент,
			                   |	ФормированиеУчебныхГруппСписокСтудентов.НомерЗачетнойКнижки КАК НомерЗачетнойКнижки
			                   |ИЗ
			                   |	Документ.ФормированиеУчебныхГрупп.СписокСтудентов КАК ФормированиеУчебныхГруппСписокСтудентов
			                   |ГДЕ
			                   |	ФормированиеУчебныхГруппСписокСтудентов.Ссылка.НомерГруппы = &НомерГруппы";
			
	ЗапросГруп.УстановитьПараметр("НомерГруппы",Объект.Группа); 
	Результ = ЗапросГруп.Выполнить().Выгрузить(); 
	Для каждого строк из Результ Цикл 
	А = Док.ТЧ.Добавить(); 
	А.Студент = Строк.Студент; 
	А.НомерЗачетнойКнижки = Строк.НомерЗачетнойКнижки; 
		
КонецЦикла;

Попытка
	Док.Записать(РежимЗаписиДокумента.Запись); 
	Док.Записать(РежимЗаписиДокумента.Проведение); 
	Сообщить("Создан документ промежуточной аттестации"); 
Исключение 
	Сообщить("Документ промежуточной аттестации НЕ создан"); 
КонецПопытки; 

	
		КонецЦикла; 
		
		
	КонецЕсли; 
	
		
		
	
	
	
	
КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыПромежуточнойАттестации(Команда)
	СоздатьДокументыПромежуточнойАттестацииНаСервере();
КонецПроцедуры
